{"version":3,"sources":["actions/types.js","reducers/picsData.js","reducers/index.js","saga/picsDataSaga.js","saga/index.js","store/index.js","utils/js/index.js","atoms/input/index.js","molecules/type-header/index.js","molecules/modal/index.js","atoms/card/index.js","actions/pics-data-action.js","organisms/container/index.js","App.js","reportWebVitals.js","index.js"],"names":["PICS_DATA","PICS_DATA_ASYNC","ADD_COMMENT","DELETE_COMMENT","ADD_LIKE","UPDATE_SORTED_DATA","initialState","rootReducer","combineReducers","picsData","state","action","console","log","type","payload","id","comment","map","pic","comments","push","picId","picComment","splice","indexOf","liked","likes","picsDataAsync","picsDataWatcher","callPicsApi","axios","get","call","put","data","pics","takeLatest","rootSaga","all","fork","sagaMiddleware","createSagaMiddleware","middleware","store","createStore","compose","applyMiddleware","run","classNames","separator","args","reduce","total","arg","Input","customClass","placeholder","onInputChange","value","className","onChange","Typeheader","onPost","blockName","useState","setComment","e","target","onClick","modalRoot","document","getElementById","Modal","children","onClose","open","el","createElement","useEffect","appendChild","removeChild","ReactDOM","createPortal","Card","updateSortedData","Container","modalState","setModalState","selectedImage","setSelectedImage","searchValue","setSearchValue","setPicsData","dispatch","useDispatch","useSelector","toggleModal","postComments","addCommentAction","deleteComment","deleteCommentAction","likePic","addLikeAction","sortedData","sort","a","b","length","filterData","filter","category","toLowerCase","includes","onSearch","indx","alt","height","width","src","url","onImageClick","stopPropagation","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"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","file":"static/js/main.85bcbb8d.chunk.js","sourcesContent":["export const PICS_DATA = \"PICS_DATA\";\nexport const PICS_DATA_ASYNC = \"PICS_DATA_ASYNC\";\n\nexport const ADD_COMMENT = \"ADD_COMMENT\";\nexport const DELETE_COMMENT = \"DELETE_COMMENT\";\nexport const ADD_LIKE = \"ADD_LIKE\";\nexport const UPDATE_SORTED_DATA = \"UPDATE_SORTED_DATA\";\n","import {\n  PICS_DATA_ASYNC,\n  ADD_COMMENT,\n  DELETE_COMMENT,\n  ADD_LIKE,\n  UPDATE_SORTED_DATA,\n} from \"../actions/types\";\n\nconst initialState = [];\n\nexport default function (state = initialState, action) {\n  console.log(\"dlelele\", action);\n  switch (action.type) {\n    case PICS_DATA_ASYNC:\n      return action.payload;\n    case ADD_COMMENT:\n      const { id, comment } = action.payload;\n      state.map((pic) => pic.id === id && pic.comments.push(comment));\n      return [...state];\n    case DELETE_COMMENT:\n      const { id: picId, comment: picComment } = action.payload;\n      state.map(\n        (pic) =>\n          pic.id === picId &&\n          pic.comments.splice(pic.comments.indexOf(picComment), 1)\n      );\n      return [...state];\n    case ADD_LIKE:\n      state.map((pic) => {\n        if (pic.id === action.payload) {\n          pic.liked ? (pic.likes -= 1) : (pic.likes += 1);\n          pic.liked = !pic.liked;\n        }\n      });\n      return [...state];\n    case UPDATE_SORTED_DATA:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport picsData from \"./picsData\";\n\nconst rootReducer = combineReducers({\n  picsData: picsData,\n});\n\nexport default rootReducer;","import { PICS_DATA_ASYNC, PICS_DATA } from \"../actions/types\";\nimport { takeLatest, put, call } from \"redux-saga/effects\";\nimport axios from 'axios';\n\nfunction callPicsApi(action) {\n  return axios.get(action.payload);\n}\n\nfunction* picsDataAsync(action) {\n    const payload = yield call(callPicsApi, action);\n    yield put({ type: PICS_DATA_ASYNC, payload: payload.data.pics })\n}\n\nexport function* picsDataWatcher() {\n  yield takeLatest(PICS_DATA, picsDataAsync);\n}","import { picsDataWatcher } from \"./picsDataSaga\";\nimport { all, fork } from \"redux-saga/effects\";\nexport default function* rootSaga() {\n  yield all([fork(picsDataWatcher)]);\n  // code after all-effect\n}","import { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"../reducers\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"../saga\";\n\nconst initialState = {};\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middleware = [sagaMiddleware];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n  )\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;","export const classNames = (...args) => {\n    let separator = '';\n    return args.reduce((total, arg) => {\n        if(arg) {\n            total = total + separator + arg;\n            separator= ' ';\n        }\n        return total;\n    }, '')\n}","import { classNames } from \"../../utils/js\";\nimport \"./input.scss\";\n\nconst Input = ({ customClass, placeholder, onInputChange, value = \"\" }) => {\n  const blockName = \"input\";\n  return (\n    <input\n      value={value}\n      className={classNames(customClass, blockName)}\n      placeholder={placeholder}\n      onChange={onInputChange}\n    />\n  );\n};\n\nexport default Input;\n","import { useState } from \"react\";\nimport { classNames } from \"../../utils/js\";\nimport Input from \"../../atoms/input\";\nimport \"./type-header.scss\";\n\nconst Typeheader = ({ customClass, onPost, id }) => {\n  const blockName = \"typeheader\";\n  const [comment, setComment] = useState('');\n  return (\n    <div className={classNames(blockName, customClass)}>\n      <Input\n        value={comment}\n        onInputChange={e => setComment(e.target.value)}\n        customClass={`${blockName}__input`}\n        placeholder=\"Type your comment here...\"\n      />\n      <div onClick={() => {onPost(id, comment); setComment('')}} className={`${blockName}__button`}>\n        POST\n      </div>\n    </div>\n  );\n};\n\nexport default Typeheader;\n","import { useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./modal.scss\";\n\n// 'modal-root' is a sibling to 'app-root'\nconst modalRoot = document.getElementById(\"modal-root\");\n\nconst Modal = ({ children, onClose, open }) => {\n  const blockName = \"modal\";\n  // element to which the modal will be rendered\n  const el = document.createElement(\"div\");\n\n  useEffect(() => {\n    // append to root when the children of Modal are mounted\n    modalRoot.appendChild(el);\n\n    // do a cleanup\n    return () => {\n      modalRoot.removeChild(el);\n    };\n  }, [el]);\n\n  return open\n    ? ReactDOM.createPortal(\n        <div onClick={onClose} className={blockName}>\n          {children}\n        </div>,\n        el\n      )\n    : null;\n};\n\nexport default Modal;\n","import { classNames } from \"../../utils/js\";\nimport \"./card.scss\";\n\nconst Card = ({ customClass, children }) => {\n  const blockName = \"card\";\n  return <div className={classNames(customClass, blockName)}>{children}</div>;\n};\n\nexport default Card;\n","import {\n  PICS_DATA,\n  ADD_COMMENT,\n  DELETE_COMMENT,\n  ADD_LIKE,\n  UPDATE_SORTED_DATA,\n} from \"./types\";\n\nexport const picsDataAction = (url) => ({\n  type: PICS_DATA,\n  payload: url,\n});\n\nexport const addCommentAction = (id, comment) => ({\n  type: ADD_COMMENT,\n  payload: { id, comment },\n});\n\nexport const deleteCommentAction = (id, comment) => ({\n  type: DELETE_COMMENT,\n  payload: { id, comment },\n});\n\nexport const addLikeAction = (id) => ({\n  type: ADD_LIKE,\n  payload: id,\n});\n\nexport const updateSortedData = (data) => ({\n  type: UPDATE_SORTED_DATA,\n  payload: data,\n});\n","import { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Input from \"../../atoms/input\";\nimport Typeheader from \"../../molecules/type-header\";\nimport Modal from \"../../molecules/modal\";\nimport Card from \"../../atoms/card\";\nimport {\n  picsDataAction,\n  addCommentAction,\n  deleteCommentAction,\n  addLikeAction,\n  updateSortedData,\n} from \"../../actions/pics-data-action\";\nimport \"./container.scss\";\n\nconst Container = () => {\n  const blockName = \"container\";\n  const URL =\n    \"https://raw.githubusercontent.com/Lokenath/MyRepo/master/Test/package.json\";\n  const [modalState, setModalState] = useState(false);\n  const [selectedImage, setSelectedImage] = useState(\"\");\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [picsData, setPicsData] = useState([]);\n  const dispatch = useDispatch();\n  useEffect(() => dispatch(picsDataAction(URL)), []);\n  const pics = useSelector((state) => state.picsData);\n  useEffect(() => setPicsData(pics), [pics]);\n\n  const toggleModal = () => {\n    setModalState(!modalState);\n  };\n\n  const onImageClick = (e) => {\n    setSelectedImage(e.target.src);\n    toggleModal();\n  };\n\n  const sortDataByLikes = () => {\n    setSearchValue(\"\");\n    const sortedData = pics.sort((a, b) => b.likes - a.likes);\n    dispatch(updateSortedData([...sortedData]));\n  };\n\n  const sortDataByMostCommented = () => {\n    setSearchValue(\"\");\n    const sortedData = pics.sort(\n      (a, b) => b.comments.length - a.comments.length\n    );\n    dispatch(updateSortedData([...sortedData]));\n  };\n\n  const onSearch = (value) => {\n    setSearchValue(value);\n    const filterData = pics.filter((pics) =>\n      pics.category.toLowerCase().includes(value.toLowerCase())\n    );\n    setPicsData([...filterData]);\n  };\n\n  const postComments = (id, comment) => {\n    comment && dispatch(addCommentAction(id, comment));\n  };\n\n  const deleteComment = (id, comment) => {\n    dispatch(deleteCommentAction(id, comment));\n  };\n\n  const likePic = (id) => {\n    dispatch(addLikeAction(id));\n  };\n\n  return (\n    <main className={blockName}>\n      <header className={`${blockName}__header`}>Imaginary</header>\n      <nav className={`${blockName}__nav`}>\n        <div className={`${blockName}__nav-filter`}>\n          <span onClick={sortDataByLikes}>Most liked</span>\n          <span></span>\n          <span onClick={sortDataByMostCommented}>Most commented</span>\n        </div>\n        <Input\n          value={searchValue}\n          onInputChange={(e) => onSearch(e.target.value)}\n          customClass={`${blockName}__nav-input`}\n          placeholder=\"Search images...\"\n        />\n      </nav>\n      <section className={`${blockName}__cards`}>\n        {picsData.length ? (\n          picsData.map((pic, indx) => (\n            <Card customClass={`${blockName}__card`} key={indx}>\n              <img\n                alt={pic.category}\n                height=\"200px\"\n                width=\"300px\"\n                className={`${blockName}__card-img`}\n                src={pic.url}\n                onClick={(e) => onImageClick(e)}\n              />\n              <div className={`${blockName}__card-header`}>\n                <div className={`${blockName}__card-like-container`}>\n                  <span className={`${blockName}__card-likes`}>\n                    {pic.likes}\n                  </span>\n                  <span\n                    onClick={() => likePic(pic.id)}\n                    className={`${blockName}__card-like-text`}\n                  >\n                    {pic.liked ? \"Unlike\" : \"Like\"}\n                  </span>\n                </div>\n                <span className={`${blockName}__card-category`}>\n                  {pic.category}\n                </span>\n              </div>\n              <Typeheader\n                id={pic.id}\n                onPost={postComments}\n                customClass={`${blockName}__card-type-header`}\n              />\n              <ul className={`${blockName}__card-comments`}>\n                {pic.comments.map((comment, indx) => (\n                  <li className={`${blockName}__card-comment`} key={indx}>\n                    <span>{comment}</span>\n                    <span onClick={() => deleteComment(pic.id, comment)}>\n                      &times;\n                    </span>\n                  </li>\n                ))}\n              </ul>\n            </Card>\n          ))\n        ) : (\n          <div className={`${blockName}__no-data`}>No data available</div>\n        )}\n      </section>\n      <Modal open={modalState} onClose={toggleModal}>\n        <Card customClass={`${blockName}__modal-card`}>\n          <img\n            onClick={(e) => e.stopPropagation()}\n            height=\"400px\"\n            width=\"600px\"\n            src={selectedImage}\n            alt=\"Selected image\"\n          />\n        </Card>\n      </Modal>\n    </main>\n  );\n};\n\nexport default Container;\n","import \"./App.scss\";\nimport Container from \"./organisms/container\";\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Container />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}